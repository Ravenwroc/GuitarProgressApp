{"version":3,"sources":["logo.svg","components/mainart/mainart.js","components/chords/chords.js","components/tuner/tuner.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Article","react_default","a","createElement","className","this","props","title","content","undefined","imagep","alt","src","concat","Component","RenderChords","state","scriptLoaded","scriptError","result","variations","setState","givenResult","console","log","Fragment","scrolling","seamless","width","height","style","border","display","justifyContent","alignItems","backgroundColor","Chords","inputValue","getChords","val","resultsArray","split","map","el","trim","replace","match","toUpperCase","_this2","handleSubmit","e","preventDefault","length","handleChange","target","value","handleCheck","onSubmit","onChange","type","placeholder","defaultChecked","chords_RenderChords","Tuner","Nav","id","react_router_dom","to","Header","href","logo","App_Nav","Footer","Homepage","mainart","NotFound","App","App_Header","react_router","exact","path","component","App_Footer","Boolean","window","location","hostname","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iGAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,6QCgBzBC,0LAZP,OACIC,EAAAC,EAAAC,cAAA,WAASC,UAAU,kBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,UAAKE,KAAKC,MAAMC,OAChBN,EAAAC,EAAAC,cAAA,SAAIE,KAAKC,MAAME,eAEKC,IAAtBJ,KAAKC,MAAMI,OAAsBT,EAAAC,EAAAC,cAAA,OAAKQ,IAAI,UAAUC,IAAG,YAAAC,OAAcR,KAAKC,MAAMI,UAAY,WARxFI,cCChBC,oNACFC,MAAQ,CACJC,cAAc,EACdC,aAAa,EACbC,QAAQ,EACRC,YAAY,sFAKRf,KAAKC,MAAMa,SAAWd,KAAKW,MAAMG,QACjCd,KAAKgB,SAAS,CAACF,OAAQd,KAAKC,MAAMa,SAElCd,KAAKC,MAAMc,aAAef,KAAKW,MAAMI,YACrCf,KAAKgB,SAAS,CAACD,WAAYf,KAAKC,MAAMc,0DAKtCf,KAAKC,MAAMa,SAAWd,KAAKW,MAAMG,QACjCd,KAAKgB,SAAS,CAACF,OAAQd,KAAKC,MAAMa,SAElCd,KAAKC,MAAMc,aAAef,KAAKW,MAAMI,YACrCf,KAAKgB,SAAS,CAACD,WAAYf,KAAKC,MAAMc,8CAO1C,IAAIE,EAAcjB,KAAKW,MAAMG,OAE7B,OADAI,QAAQC,IAAIF,GAERrB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAuB,SAAA,MACsB,IAAhBH,EACErB,EAAAC,EAAAC,cAAA,UAAQI,MAAM,SAASmB,UAAU,KAAKC,SAAS,WAAWvB,UAAU,mBAAmBwB,MAAM,OACrFC,OAAO,OACPC,MAAO,CACHC,OAAQ,OACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZN,MAAO,OACPC,OAAQ,OACRM,gBAAiB,QAErBvB,IAAG,6CAAAC,QAA0E,IAA1BR,KAAKW,MAAMI,WAAZ,mBAA/C,KAAAP,OAAsGS,EAAtG,aAAgI,aA9CpIR,cAqIZsB,6MAhFXpB,MAAQ,CACJqB,WAAY,GACZlB,QAAQ,EACRC,YAAY,KAIhBkB,UAAY,SAACC,GACT,GAAY,OAARA,EAAc,CACd,IACIC,EADaD,EAAIE,MAAM,KACGC,IAAI,SAACC,GAAD,OAAQA,EAAGC,OAAOC,QAAQ,IAAK,QAAQA,QAAQ,IAAK,OAAOA,QAAQ,IAAK,OAAOA,QAAQ,gBAAiB,SAAAC,GAAK,SAAAjC,OAAOiC,EAAP,QAAkBD,QAAQ,+BAAgC,SAAAC,GAAK,SAAAjC,OAAOiC,EAAMC,cAAb,WAC9MC,EAAK3B,SAAS,CACVF,OAAQqB,SAIZQ,EAAK3B,SAAS,CACVF,QAAQ,OAoBpB8B,aAAe,SAACC,GAEZ,OADAA,EAAEC,iBACEH,EAAKhC,MAAMqB,WAAWe,OAAS,GAC/BJ,EAAKV,UAAUU,EAAKhC,MAAMqB,aACnB,IAEPW,EAAKV,UAAU,OACR,MAIfe,aAAe,SAACH,GACZF,EAAK3B,SAAS,CACVgB,WAAYa,EAAEI,OAAOC,WAI7BC,YAAc,SAACN,GACXF,EAAK3B,SAAS,CACVD,YAAa4B,EAAKhC,MAAMI,sFAM5B,OACInB,EAAAC,EAAAC,cAAA,WAASC,UAAU,kBACfH,EAAAC,EAAAC,cAAA,QAAMsD,SAAUpD,KAAK4C,aAAc7C,UAAU,gBACzCH,EAAAC,EAAAC,cAAA,qCACAF,EAAAC,EAAAC,cAAA,SAAOuD,SAAUrD,KAAKgD,aAAcE,MAAOlD,KAAKW,MAAMqB,WAAYjC,UAAU,cACrEuD,KAAK,OAAOC,YAAY,0CAC/B3D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,eAAeuD,KAAK,SAASJ,MAAM,aADxD,IACqEtD,EAAAC,EAAAC,cAAA,SAAOC,UAAU,oBAAjB,gBAAmDH,EAAAC,EAAAC,cAAA,SAAOwD,KAAK,WAAWE,eAAgBxD,KAAKW,MAAMI,WAAYsC,SAAUrD,KAAKmD,YAAaD,MAAM,QAGhM,IAAtBlD,KAAKW,MAAMG,OAAoBlB,EAAAC,EAAAC,cAAC2D,EAAD,CAAc3C,OAAQd,KAAKW,MAAMG,OAAQC,WAAYf,KAAKW,MAAMI,aAAe,YAzE/GN,aCrCNiD,0LAbP,OACI9D,EAAAC,EAAAC,cAAA,WAASC,UAAU,kBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,6GAEoBM,IAAtBJ,KAAKC,MAAMI,OAAsBT,EAAAC,EAAAC,cAAA,OAAKQ,IAAI,UAAUC,IAAG,YAAAC,OAAcR,KAAKC,MAAMI,UAAY,WAR1FI,8BCUdkD,mLAGE,OACI/D,EAAAC,EAAAC,cAAA,OAAK8D,GAAG,WACJhE,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,KACIjE,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,CAASC,GAAG,KAAZ,0BACJlE,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,CAASC,GAAG,WAAZ,WACJlE,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,CAASC,GAAG,UAAZ,sBAVdrD,aAoBZsD,mLAEE,OACInE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAuB,SAAA,KACIxB,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,YAAYiE,KAAK,UAASpE,EAAAC,EAAAC,cAAA,OAAKS,IAAK0D,IAAMlE,UAAU,OAAOO,IAAI,SAA5E,oBAGJV,EAAAC,EAAAC,cAACoE,EAAD,eATCzD,aAiBf0D,mLAEE,OACIvE,EAAAC,EAAAC,cAAA,UAAQC,UAAU,aACdH,EAAAC,EAAAC,cAAA,iDAJKW,aAUf2D,EAAW,WACb,OACIxE,EAAAC,EAAAC,cAACuE,EAAD,CAAShE,OAAO,kBAAkBH,MAAM,0BAC/BC,QAAQ,mSAInBmE,EAAW,WACb,OACA1E,EAAAC,EAAAC,cAACuE,EAAD,CAASnE,MAAM,MAAMC,QAAQ,8GAuBlBoE,MAnBf,WACI,OACI3E,EAAAC,EAAAC,cAAAF,EAAAC,EAAAuB,SAAA,KACIxB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAC0E,EAAD,MACA5E,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,KACIjE,EAAAC,EAAAC,cAAC2E,EAAA,EAAD,KACA7E,EAAAC,EAAAC,cAAC2E,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWR,IACjCxE,EAAAC,EAAAC,cAAC2E,EAAA,EAAD,CAAOE,KAAK,UAAUC,UAAW7C,IACjCnC,EAAAC,EAAAC,cAAC2E,EAAA,EAAD,CAAOE,KAAK,SAASC,UAAWlB,IAChC9D,EAAAC,EAAAC,cAAC2E,EAAA,EAAD,CAAOG,UAAWN,MAGtB1E,EAAAC,EAAAC,cAAC+E,EAAD,SC1EIC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASxC,MACvB,2DCXNyC,IAASC,OAAOvF,EAAAC,EAAAC,cAACsF,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.10d4662e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.24d17edf.svg\";","import React, {Component} from \"react\";\nimport './article.scss';\nclass Article extends Component{\n    render() {\n        return(\n            <article className=\"defaultArticle\">\n                <div className=\"inArticleText\">\n                    <h4>{this.props.title}</h4>\n                    <p>{this.props.content}</p>\n                </div>\n                {(this.props.imagep !== undefined)?<img alt=\"Loading\" src={`./images/${this.props.imagep}`}/>:\"\"}\n\n            </article>\n        )\n    }\n}\nexport default Article;","import React, {Component} from \"react\";\nimport './chords.scss';\n\nclass RenderChords extends Component {\n    state = {\n        scriptLoaded: false,\n        scriptError: true,\n        result: false,\n        variations: false\n    };\n\n\n    componentDidMount() {\n        if (this.props.result !== this.state.result) {\n            this.setState({result: this.props.result});\n        }\n        if (this.props.variations !== this.state.variations) {\n            this.setState({variations: this.props.variations});\n        }\n    }\n\n    componentDidUpdate() {\n        if (this.props.result !== this.state.result) {\n            this.setState({result: this.props.result});\n        }\n        if (this.props.variations !== this.state.variations) {\n            this.setState({variations: this.props.variations});\n        }\n    }\n\n\n\n    render() {\n        let givenResult = this.state.result;\n        console.log(givenResult);\n        return (\n            <>\n                {(givenResult !== false) ?\n                    <iframe title=\"Chords\" scrolling=\"no\" seamless=\"seamless\" className=\"uberchord-iframe\" width=\"auto\"\n                            height=\"auto\"\n                            style={{\n                                border: \"none\",\n                                display: \"flex\",\n                                justifyContent: \"center\",\n                                alignItems: \"center\",\n                                width: \"auto\",\n                                height: \"60vh\",\n                                backgroundColor: \"#fff\"\n                            }}\n                            src={`https://api.uberchord.com/v1/embed/chords?${(this.state.variations !== true)?`names`:`nameLike`}=${givenResult}#noicon`}/> : null}\n            </>\n        )\n    }\n}\n\nclass Chords extends Component {\n    state = {\n        inputValue: \"\",\n        result: false,\n        variations: false\n    };\n\n\n    getChords = (val) => {\n        if (val !== null) {\n            let givenValue = val.split(\",\");\n            let resultsArray = givenValue.map((el) => el.trim().replace(\"b\", \"Bb_m\").replace(\"h\", \"B_m\").replace(\"H\", \"B__\").replace(/(?![B])[A-Z]/g, match => `${match}__`).replace(/(?![is])(?![b])(?![m])[a-z]/g, match => `${match.toUpperCase()}_m_`));\n            this.setState({\n                result: resultsArray\n            })\n\n        } else {\n            this.setState({\n                result: false\n            })\n        }\n        //     fetch(\"https://api.uberchord.com/v1/chords?names=\" + resultsArray.toString())\n        //         .then(resp => resp.json())\n        //         .then((result) => {\n        //             if (result !== false) {\n        //                 this.setState({\n        //                     result: result\n        //                 })\n        //             }\n        //         })\n        // } else {\n        //     this.setState({\n        //         result: false\n        //     })\n        // }\n    };\n\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        if (this.state.inputValue.length > 0) {\n            this.getChords(this.state.inputValue);\n            return true;\n        } else {\n            this.getChords(null);\n            return false;\n        }\n    };\n\n    handleChange = (e) => {\n        this.setState({\n            inputValue: e.target.value\n        })\n    };\n\n    handleCheck = (e) => {\n        this.setState({\n            variations: !this.state.variations\n            }\n        )\n    };\n\n    render() {\n        return (\n            <article className=\"defaultArticle\">\n                <form onSubmit={this.handleSubmit} className=\"inChordsForm\">\n                    <h3>Wyszukiwarka akord√≥w</h3>\n                    <input onChange={this.handleChange} value={this.state.inputValue} className=\"chordsInput\"\n                           type=\"text\" placeholder=\"Wpisz tutaj akordy... np. C,e,A,d,F,g\"/>\n                    <div className=\"chordsInputs\">\n                        <input className=\"chordsSubmit\" type=\"submit\" value=\"Wyszukaj\"/> <label className=\"chordsVariations\">Wariacje &nbsp;<input type=\"checkbox\" defaultChecked={this.state.variations} onChange={this.handleCheck} value=\"\"/></label>\n                    </div>\n\n                    {(this.state.result !== false) ? <RenderChords result={this.state.result} variations={this.state.variations}/>: \"\"}\n                </form>\n\n            </article>\n        );\n    }\n}\n\nexport default Chords;","import React, {Component} from \"react\";\nimport './tuner.scss';\n\nclass Tuner extends Component{\n    render() {\n        return (\n            <article className=\"defaultArticle\">\n                <div className=\"inArticleText\">\n                    <h4>Plac budowy</h4>\n                    <p>Ta strona jest aktualnie budowana. Nie martw siƒô, niebawem tu co≈õ bƒôdzie :)</p>\n                </div>\n                {(this.props.imagep !== undefined)?<img alt=\"Loading\" src={`./images/${this.props.imagep}`}/>:\"\"}\n\n            </article>\n        );\n    }\n}\n\nexport default Tuner;","import React, {Component} from 'react';\nimport logo from '../logo.svg';\nimport './scss/App.scss';\nimport Article from './mainart/mainart';\nimport Chords from './chords/chords';\nimport Tuner from './tuner/tuner';\nimport {\n    HashRouter,\n    Route,\n    Switch,\n    NavLink,\n} from 'react-router-dom';\n\nclass Nav extends Component {\n\n    render() {\n        return (\n            <nav id=\"navmenu\">\n                <div>\n                    <ul>\n                        <HashRouter>\n                            <li><NavLink to=\"/\">Strona g≈Ç√≥wna</NavLink></li>\n                            <li><NavLink to=\"/chords\">Akordy</NavLink></li>\n                            <li><NavLink to=\"/tuner\">Stroik</NavLink></li>\n                        </HashRouter>\n                    </ul>\n                </div>\n            </nav>\n\n        );\n    }\n}\n\nclass Header extends Component {\n    render() {\n        return (\n            <>\n                <header className=\"header\">\n                    <div className=\"headerLogo\">\n                        <a className=\"Logo-link\" href=\"_blank\"><img src={logo} className=\"logo\" alt=\"logo\"/>Guitar\n                            Progress</a>\n                    </div>\n                    <Nav/>\n                </header>\n\n            </>\n        );\n    }\n}\n\nclass Footer extends Component{\n    render() {\n        return(\n            <footer className=\"container\">\n                <span>&copy; Copyright Raven 2019</span>\n            </footer>\n        )\n    }\n}\n\nconst Homepage = () => {\n    return (\n        <Article imagep=\"learnguitar.jpg\" title=\"Witamy w GuitarProgress\"\n                 content=\"Strona ta po≈õwiƒôcona jest ≈Çatwiejszemu wyszukaniu potrzebnych akord√≥w oraz ich wariacji, a tak≈ºe ≈Çatwego zapisywania naszych wynik√≥w. W przysz≈Ço≈õci pojawiƒÖ siƒô tutaj tutoriale jak nauczyƒá siƒô graƒá na gitarze od podstaw.\"/>\n    )\n};\n\nconst NotFound = () =>{\n    return(\n    <Article title=\"404\" content=\"Oops.. Nie wy≈õwietlimy Ci tej strony, gdy≈º nie istnieje. Skorzystaj z tego co ju≈º mamy :)\"/>\n    )\n};\n\nfunction App() {\n    return (\n        <>\n            <div className=\"container\">\n                <Header/>\n                <HashRouter>\n                    <Switch>\n                    <Route exact path='/' component={Homepage}/>\n                    <Route path='/chords' component={Chords}/>\n                    <Route path='/tuner' component={Tuner}/>\n                    <Route component={NotFound}/>\n                    </Switch>\n                </HashRouter>\n                <Footer />\n            </div>\n        </>\n    )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './components/scss/App.scss';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}